{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Liz\\\\Desktop\\\\boatAndPeople\\\\client\\\\src\\\\components\\\\forms\\\\AddBoat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { Form, Input, Button, Select } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ADD_BOAT, GET_PEOPLE, GET_BOAT } from '../../queries';\nconst {\n  Option\n} = Select;\n\nconst AddBoat = () => {\n  _s();\n\n  const [id] = useState(uuidv4());\n  const [addBoat] = useMutation(ADD_BOAT);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const {\n      year,\n      make,\n      model,\n      price,\n      personId\n    } = values;\n    addBoat({\n      variables: {\n        id,\n        year,\n        make,\n        model,\n        price,\n        personId\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addBoat: {\n          __typename: 'Boat',\n          id,\n          year,\n          make,\n          model,\n          price,\n          personId\n        }\n      },\n      update: (proxy, {\n        data: {\n          addBoat\n        }\n      }) => {\n        const data = proxy.readQuery({\n          query: GET_BOAT\n        });\n        proxy.writeQuery({\n          query: GET_BOAT,\n          data: { ...data // boats: [...data.boats, addBoat]\n\n          }\n        });\n      }\n    });\n  };\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PEOPLE);\n  if (loading) return 'Loading...';\n  if (error) return `Errror! ${error.message}`;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    name: \"add-boat-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    size: \"large\",\n    style: {\n      marginBottom: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"year\",\n      rules: [{\n        required: true,\n        message: 'Please input year of the boat!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"make\",\n      rules: [{\n        required: true,\n        message: 'Please input make of the boat!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Make\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"model\",\n      rules: [{\n        required: true,\n        message: 'Please input model! of the boat'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"price\",\n      rules: [{\n        required: true,\n        message: 'Please input price of the boat!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"personId\",\n      rules: [{\n        required: true,\n        message: 'Please select owner of the boat!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        style: {\n          width: 120\n        },\n        placeholder: \"Owner\",\n        children: data.people.map(({\n          id,\n          firstName\n        }) => /*#__PURE__*/_jsxDEV(Option, {\n          value: id,\n          children: firstName\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      shouldUpdate: true,\n      children: () => /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n          errors\n        }) => errors.length).length,\n        children: \"Add Boat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddBoat, \"cv1qxSZ55qvw51UVxB3OcfXeIEc=\", false, function () {\n  return [useMutation, Form.useForm, useQuery];\n});\n\n_c = AddBoat;\nexport default AddBoat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBoat\");","map":{"version":3,"sources":["C:/Users/Liz/Desktop/boatAndPeople/client/src/components/forms/AddBoat.js"],"names":["React","useEffect","useState","useMutation","useQuery","Form","Input","Button","Select","v4","uuidv4","ADD_BOAT","GET_PEOPLE","GET_BOAT","Option","AddBoat","id","addBoat","form","useForm","forceUpdate","onFinish","values","year","make","model","price","personId","variables","optimisticResponse","__typename","update","proxy","data","readQuery","query","writeQuery","loading","error","message","marginBottom","required","width","people","map","firstName","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMutation, useQuery } from '@apollo/client'\n\nimport { Form, Input, Button, Select } from 'antd'\n\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { ADD_BOAT, GET_PEOPLE, GET_BOAT } from '../../queries'\n\nconst { Option } = Select;\n\nconst AddBoat = () => {\n  const [id] = useState(uuidv4())\n  const [addBoat] = useMutation(ADD_BOAT)\n\n  const [form] = Form.useForm()\n  const [, forceUpdate] = useState()\n\n  // To disable submit button at the beginning.\n  useEffect(() => {\n    forceUpdate({})\n  }, [])\n\n  const onFinish = values => {\n    const { year, make, model, price, personId} = values\n\n    addBoat({\n      variables: {\n        id,\n        year,\n        make,\n        model,\n        price,\n        personId\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addBoat: {\n          __typename: 'Boat',\n          id,\n          year,\n          make,\n          model,\n          price,\n          personId\n        }\n      },\n      update: (proxy, { data: { addBoat } }) => {\n        const data = proxy.readQuery({ query: GET_BOAT })\n        proxy.writeQuery({\n          query: GET_BOAT,\n          data: {\n            ...data,\n            // boats: [...data.boats, addBoat]\n          }\n        })\n      }\n    })\n  }\n\n  const { loading, error, data } = useQuery(GET_PEOPLE)\n  if (loading) return 'Loading...'\n  if (error) return `Errror! ${error.message}`\n\n  return (\n    <Form\n      form={form}\n      name='add-boat-form'\n      layout='inline'\n      onFinish={onFinish}\n      size='large'\n      style={{ marginBottom: '40px' }}\n    >\n      <Form.Item\n        name='year'\n        rules={[{ required: true, message: 'Please input year of the boat!' }]}\n      >\n        <Input placeholder='Year' />\n      </Form.Item>\n      <Form.Item\n        name='make'\n        rules={[{ required: true, message: 'Please input make of the boat!' }]}\n      >\n        <Input placeholder='Make' />\n      </Form.Item>\n      <Form.Item\n        name='model'\n        rules={[{ required: true, message: 'Please input model! of the boat' }]}\n      >\n        <Input placeholder='Model' />\n      </Form.Item>\n      <Form.Item\n        name='price'\n        rules={[{ required: true, message: 'Please input price of the boat!' }]}\n      >\n        <Input placeholder='Price' />\n      </Form.Item>\n      <Form.Item\n        name='personId'\n        rules={[{ required: true, message: 'Please select owner of the boat!' }]}\n      >\n        <Select style={{ width: 120 }} placeholder=\"Owner\">\n          {data.people.map(({ id, firstName }) => (\n            <Option key={id} value={id} >{firstName}</Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form.Item shouldUpdate={true}>\n        {() => (\n          <Button\n            type='primary'\n            htmlType='submit'\n            disabled={\n              !form.isFieldsTouched(true) ||\n              form.getFieldsError().filter(({ errors }) => errors.length).length\n            }\n          >\n            Add Boat\n          </Button>\n        )}\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default AddBoat"]},"metadata":{},"sourceType":"module"}